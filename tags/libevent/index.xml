<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Libevent on wbprime</title>
    <link>http://www.wbprime.me/tags/libevent/</link>
    <description>Recent content in Libevent on wbprime</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 05 Feb 2018 17:08:50 +0800</lastBuildDate>
    
	<atom:link href="http://www.wbprime.me/tags/libevent/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Libevent Note</title>
      <link>http://www.wbprime.me/posts/2018-02-05-libevent-notes/</link>
      <pubDate>Mon, 05 Feb 2018 17:08:50 +0800</pubDate>
      
      <guid>http://www.wbprime.me/posts/2018-02-05-libevent-notes/</guid>
      <description>Event Context Structure event_base
Setup a Default Context #include &amp;lt;event2/event.h&amp;gt; struct event_base *event_base_new(void);  Setup a Custom Context 可以用 event_config 来自定义上下文。
struct event_config *event_config_new(void); struct event_base *event_base_new_with_config(const struct event_config *cfg); void event_config_free(struct event_config *cfg);  event_config 的自定义方法：
#include &amp;lt;event2/event.h&amp;gt; int event_config_avoid_method(struct event_config *cfg, const char *method); enum event_method_feature { EV_FEATURE_ET = 0x01, EV_FEATURE_O1 = 0x02, EV_FEATURE_FDS = 0x04, }; int event_config_require_features(struct event_config *cfg, enum event_method_feature feature); enum event_base_config_flag { EVENT_BASE_FLAG_NOLOCK = 0x01, EVENT_BASE_FLAG_IGNORE_ENV = 0x02, EVENT_BASE_FLAG_STARTUP_IOCP = 0x04, EVENT_BASE_FLAG_NO_CACHE_TIME = 0x08, EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST = 0x10, EVENT_BASE_FLAG_PRECISE_TIMER = 0x20 }; int event_config_set_flag(struct event_config *cfg, enum event_base_config_flag flag);  event_config_avoid_method() 指定不使用的后端名</description>
    </item>
    
  </channel>
</rss>